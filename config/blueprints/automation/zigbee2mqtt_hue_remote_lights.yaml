---
blueprint:
  name: Zigbee2MQTT - Philips Hue Dimmer Remote for Light Control
  domain: automation
  invalid_thing: "<- Doesn't work"
  input:
    remote:
      name: Remote
      description: Philips Hue Remote (RWL021) to use
      selector:
        device:
          integration: mqtt
          manufacturer: Philips
          model: Hue dimmer switch (324131092621)
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain:
    force_brightness:
      name: Force turn on brightness
      description: >
        Force the brightness to the set level below, when the "on" button on
        the remote is pushed
      default: false
      selector:
        boolean:
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 50
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
          unit_of_measurement: "%"

mode: queued
max_exceeded: silent

variables:
  force_brightness: !input force_brightness
  action: "{{ trigger.to_state.attributes.action }}"

trigger:
  - platform: device
    domain: mqtt
    device_id: !input remote
    type: action

action:
  - choose:
      - conditions:
          - "{{ action == 'on-press' }}"
          - "{{ force_brightness }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              transition: 1
              brightness_pct: !input brightness
      - conditions: "{{ action == 'on-press' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              transition: 1
      - conditions: "{{ action== 'on-hold' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_pct: 100
      - conditions: "{{ action == 'up-press' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: 20
              transition: 1
      - conditions: "{{ action == 'up-hold' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: 10
              transition: 1
      - conditions: "{{ action == 'down-press' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: -20
              transition: 1
      - conditions: "{{ action == 'down-hold' }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: -10
              transition: 1
      - conditions: "{{ action == 'off-press' }}"
        sequence:
          - service: light.turn_off
            target: !input light
            data:
              transition: 1
